@model IEnumerable<Inventorium.Models.InventoryItem>
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Inventory";
    var username = User?.Identity?.Name ?? "User";
    var isAdmin = User?.IsInRole("Admin") ?? false;
}

<h2>Welcome, @username</h2>

@if (SignInManager.IsSignedIn(User))
{
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    <p>
        @if (isAdmin)
        {
            <a asp-action="Create" class="btn btn-success me-2">➕ Add Item</a>
        }
        <a asp-controller="Request" asp-action="Create" class="btn btn-secondary">📤 Send Request</a>
    </p>

    @if (!Model.Any())
    {
        <p><strong>No inventory items found.</strong></p>
    }
    else
    {
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Item</th>
                    <th>Description</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    @if (isAdmin)
                    {
                        <th>Created By</th>
                        <th>Actions</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@(item.ItemName ?? "N/A")</td>
                        <td>@(item.Description ?? "-")</td>
                        <td>@item.Quantity @item.Unit</td>
                        <td>@item.Price @item.Currency</td>
                        @if (isAdmin)
                        {
                            <td>@(item.CreatedBy ?? "-")</td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">✏️ Edit</a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger"
                                   onclick="return confirm('Are you sure you want to delete this item?');">
                                    🗑️ Delete
                                </a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">🔍 Details</a>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }
}
else
{
    <p class="text-muted">You must be logged in to view inventory.</p>
}



@* @model IEnumerable<Inventorium.Models.InventoryItem>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ItemName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Unit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Currency)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ItemName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Unit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Currency)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table> *@
